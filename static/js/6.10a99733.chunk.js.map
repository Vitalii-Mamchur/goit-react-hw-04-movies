{"version":3,"sources":["api-service/api-service.js","components/FilmsList/FilmsList.js","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","views/MoviesPage/MoviesPage.js"],"names":["API_KEY","BASE_URL","onSearchTrending","Axios","get","onSearchQuery","searchQuery","onSearchMovieByID","movieId","onSearchCastByID","onSearchReviewsByID","withRouter","films","location","map","id","title","to","pathname","state","from","module","exports","Searchbar","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","alert","props","onSubmit","className","styles","SearchForm","this","SearchFormInput","type","autoComplete","autoFocus","placeholder","onChange","SearchFormButton","SearchFormButtonLabel","Component","MoviesPage","movies","handleChangeQuery","fetchMovies","then","res","data","total_results","results","localStorage","getItem","JSON","parse","prevProps","prevState","nextProps","nextState","setItem","stringify","onFetch","FilmsList"],"mappings":"yIAAA,+LAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAmB,kBAC9BC,IAAMC,IAAN,UAAaH,EAAb,qCAAkDD,KAEvCK,EAAgB,SAACC,GAAD,OAC3BH,IAAMC,IAAN,UACKH,EADL,iCACsCD,EADtC,kBACuDM,EADvD,gDAIWC,EAAoB,SAACC,GAAD,OAC/BL,IAAMC,IAAN,UAAaH,EAAb,kBAA+BO,EAA/B,oBAAkDR,EAAlD,qBAEWS,EAAmB,SAACD,GAAD,OAC9BL,IAAMC,IAAN,UACKH,EADL,kBACuBO,EADvB,4BACkDR,EADlD,qBAIWU,EAAsB,SAACF,GAAD,OACjCL,IAAMC,IAAN,UACKH,EADL,kBACuBO,EADvB,4BACkDR,EADlD,sB,iGCEaW,eApBG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,6BACGD,GACCA,EAAME,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,6BACE,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAaH,GAAMI,MAAO,CAAEC,KAAMP,IAAtD,SACGG,KAFID,Y,mBCRnBM,EAAOC,QAAU,CAAC,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,kJCsCxLC,E,4MAnCbJ,MAAQ,CAAEK,MAAO,I,EAEjBC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAGzCC,aAAe,SAACJ,GAEd,GADAA,EAAEK,iBACuB,KAArB,EAAKZ,MAAMK,MACb,OAAOQ,MAAM,8BAEf,EAAKC,MAAMC,SAAS,EAAKf,MAAMK,Q,4CAIjC,WACE,OACE,uBAAMW,UAAWC,IAAOC,WAAYH,SAAUI,KAAKR,aAAnD,UACE,uBACEK,UAAWC,IAAOG,gBAClBC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,GACZd,MAAOS,KAAKnB,MAAMK,MAClBoB,SAAUN,KAAKb,eAEjB,wBAAQe,KAAK,SAASL,UAAWC,IAAOS,iBAAxC,SACE,sBAAMV,UAAWC,IAAOU,sBAAxB,6B,GA7BcC,a,gBCwDTC,E,4MArDb7B,MAAQ,CAAE8B,OAAQ,GAAI3C,YAAa,I,EAmBnC4C,kBAAoB,SAAC1B,GACnB,EAAKG,SAAS,CAAErB,YAAakB,K,EAG/B2B,YAAc,WACZ,IAAM7C,EAAc,EAAKa,MAAMb,YAC/BD,YAAcC,GAAa8C,MAAK,SAACC,GAAD,OAC9BA,EAAIC,KAAKC,cACL,EAAK5B,SAAS,CAAEsB,OAAQI,EAAIC,KAAKE,UACjCxB,MAAM,gE,uDA1Bd,WACyC,OAAnCyB,aAAaC,QAAQ,WACvBpB,KAAKX,SAAS,CAAEsB,OAAQU,KAAKC,MAAMH,aAAaC,QAAQ,e,gCAI5D,SAAmBG,EAAWC,GACxBA,EAAUxD,cAAgBgC,KAAKnB,MAAMb,aACvCgC,KAAKa,YAAYb,KAAKnB,MAAMb,e,kCAIhC,SAAqByD,EAAWC,GAC9B,IAAMf,EAASX,KAAKnB,MAAM8B,OAC1BQ,aAAaQ,QAAQ,SAAUN,KAAKO,UAAUjB,M,oBAgBhD,WACE,IAAMA,EAASX,KAAKnB,MAAM8B,OACpB3C,EAAcgC,KAAKnB,MAAMb,YAE/B,OACE,qCACE,qBAAK6B,UAAU,GAAf,SACE,cAAC,EAAD,CACED,SAAUI,KAAKY,kBACf5C,YAAaA,EACb6D,QAAS7B,KAAKa,gBAGlB,qBAAKhB,UAAU,GAAf,SACE,cAACiC,EAAA,EAAD,CAAWxD,MAAOqC,a,GA/CHF","file":"static/js/6.10a99733.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst API_KEY = \"5236a2719406752a49bdc856168a1fda\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const onSearchTrending = () =>\r\n  Axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n\r\nexport const onSearchQuery = (searchQuery) =>\r\n  Axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\r\n  );\r\n\r\nexport const onSearchMovieByID = (movieId) =>\r\n  Axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n\r\nexport const onSearchCastByID = (movieId) =>\r\n  Axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const onSearchReviewsByID = (movieId) =>\r\n  Axios.get(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilmsList = ({ films, location }) => {\r\n  return (\r\n    <ul>\r\n      {films &&\r\n        films.map(({ id, title }) => (\r\n          <li key={id}>\r\n            <Link to={{ pathname: `/movies/${id}`, state: { from: location } }}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilmsList.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(FilmsList);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__39Glc\",\"SearchFormButton\":\"Searchbar_SearchFormButton__PnKW2\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1AsuA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__296MJ\"};","import React, { Component } from \"react\";\r\nimport styles from \"./Searchbar.module.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.query === \"\") {\r\n      return alert(\"Please, enter your request\");\r\n    }\r\n    this.props.onSubmit(this.state.query);\r\n    // this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n        <input\r\n          className={styles.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"\"\r\n          value={this.state.query}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\" className={styles.SearchFormButton}>\r\n          <span className={styles.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport Searchbar from \"../../components/Searchbar\";\r\nimport { onSearchQuery } from \"../../api-service/api-service\";\r\nimport FilmsList from \"../../components/FilmsList\";\r\n\r\nclass MoviesPage extends Component {\r\n  state = { movies: [], searchQuery: \"\" };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"movies\") !== null) {\r\n      this.setState({ movies: JSON.parse(localStorage.getItem(\"movies\")) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchMovies(this.state.searchQuery);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(nextProps, nextState) {\r\n    const movies = this.state.movies;\r\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\r\n  }\r\n\r\n  handleChangeQuery = (query) => {\r\n    this.setState({ searchQuery: query });\r\n  };\r\n\r\n  fetchMovies = () => {\r\n    const searchQuery = this.state.searchQuery;\r\n    onSearchQuery(searchQuery).then((res) =>\r\n      res.data.total_results\r\n        ? this.setState({ movies: res.data.results })\r\n        : alert(\"No results were found for your request, please try again\")\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const movies = this.state.movies;\r\n    const searchQuery = this.state.searchQuery;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"\">\r\n          <Searchbar\r\n            onSubmit={this.handleChangeQuery}\r\n            searchQuery={searchQuery}\r\n            onFetch={this.fetchMovies}\r\n          />\r\n        </div>\r\n        <div className=\"\">\r\n          <FilmsList films={movies} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}